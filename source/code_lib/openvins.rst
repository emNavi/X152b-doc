OpenVins 视觉里程计
==============================================

环境配置与模块编译
----------------------------------------------

.. code-block:: bash

    # 进入 X152b 项目目录执行
    bash scripts/openvins_setup.sh

使用
----------------------------------------------

.. code-block:: bash

    # 进入 X152b 项目目录执行
    bash scripts/openvins_run.sh

代码结构
----------------------------------------------

.. code-block:: bash

    open_vins
        ├── config # 各种主流数据集的配置参数预设
        │   └── ...
        ├── ov_core
        │   ├── cam # 相机模型类（针孔相机模型、鱼眼相机模型）
        │   ├── cpi # 连续预积分器类（分段常数测量假设、分段恒定局部加速度假设）
        │   ├── feat # 2D图像稀疏特征点检测器、跟踪器、三角化实现（线性、G-N特征）
        │   ├── plot # 可视化
        │   ├── sim # 可在SE(3)流形上插值的B样条实现，视觉-惯性估计器（适用于任何相机和任何频率）
        │   ├── track # 跟踪器实现，支持单目、双目
        │   ├── types # 自定义数据类型
        │   └── utils # 工具类
        ├── ov_data
        │   └── ... # 存放各种主流数据集
        ├── ov_eval
        │   └── ... # 评估类（轨迹对齐、绘制、精度一致性评估工具），可生成评估结果（绝对轨迹误差、相对位姿误差、标准化估计误差平方、每个时间步的误差和界限）
        ├── ov_init
        │   ├── init # VIO系统的初始化主要逻辑
        │   ├── dynamic # 从动态中进行VIO的初始化
        │   └── static # 从静态开始的VIO初始化
        └── ov_msckf
            ├── core # VIO系统运行主要逻辑
            ├── state # 基于FEJ的可拓展滑动窗口误差状态模型
            └── update # 多传感器时间校准、内外参校准并更新滤波器

调参建议
----------------------------------------------

1、根据场地环境调整特征检测器，可以单独在 rviz 中观察特征点检测和匹配情况。

2、调整初始化跳变阈值，确保对于无人机来说在起飞时刻一定能完成VIO的初始化。

.. TODO(Derkai): 这里缺几张动图或者短视频用于展示不同参数的影响

算法解析
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**前端流程解析**

本文默认实现了两种方法
1、ORB + 自定义的鲁棒匹配：首先使用KNN近邻对相机图之间进行描述符匹配，然后对匹配结果在不同的相机图之间互相配对，筛选出共有的匹配项。最后用畸变矫正后的图对匹配结果进行RANSAC，进一步消除错误匹配。
2、KLT 光流法在多个图像之间进行跟踪，然后进行 RANSAC，消除错误匹配。

**特征点的提取和跟踪**：使用Fast特征+KLT光流，这样只需在第一帧提取特征点（首先是左相机检测出至少10个关键点），然后计算这些具有代表性的特征点的光流，这样可实现画面中运动物体的特征点稳健跟踪，同时用KLT光流检测获取新点。

**特征的均匀化**：为了保证关键点在图像中的均匀分布，OpenVINS对图像进行栅格化，每个栅格只提供一定数量的关键点，做法是对每个栅格按置信度筛选出排序较高的一部分，使得关键点均匀分布在整个画面上。

**特征点匹配**：对于多目系统，想要实现对共有的特征点进行追踪，需要匹配不同相机间的特征点，且需要消除那些不可靠或错误的匹配。


常见问题
----------------------------------------------

Q: 为什么在有的数据集上一开始就会跑飞？

A: OpenVINS 的IMU初始化使用静止初始化方法，要求运动起始状态为静止状态，且设定激励阈值来判断运动突变时刻，部分数据集不满足起始静止条件会出现跑飞的情况。

Q: IMU误差大

A: 前期IMU误差较大，但通过后期的状态更新可以消除一部分的误差。